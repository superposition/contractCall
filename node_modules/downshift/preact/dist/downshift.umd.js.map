{"version":3,"file":"downshift.umd.js","sources":["../../src/set-a11y-status.js","../../src/utils.js","../../src/downshift.js","../../src/index.js"],"sourcesContent":["// istanbul ignore next\nlet statusDiv =\n  typeof document === 'undefined'\n    ? null\n    : document.getElementById('a11y-status-message')\n\nlet statuses = []\n\nfunction setStatus(status) {\n  const isSameAsLast = statuses[statuses.length - 1] === status\n  if (isSameAsLast) {\n    statuses = [...statuses, status]\n  } else {\n    statuses = [status]\n  }\n  const div = getStatusDiv()\n\n  // Remove previous children\n  while (div.lastChild) {\n    div.removeChild(div.firstChild)\n  }\n\n  statuses.filter(Boolean).forEach((statusItem, index) => {\n    div.appendChild(getStatusChildDiv(statusItem, index))\n  })\n}\n\nfunction getStatusChildDiv(status, index) {\n  const display = index === statuses.length - 1 ? 'block' : 'none'\n\n  const childDiv = document.createElement('div')\n  childDiv.style.display = display\n  childDiv.textContent = status\n\n  return childDiv\n}\n\nfunction getStatusDiv() {\n  if (statusDiv) {\n    return statusDiv\n  }\n  statusDiv = document.createElement('div')\n  statusDiv.setAttribute('id', 'a11y-status-message')\n  statusDiv.setAttribute('role', 'status')\n  statusDiv.setAttribute('aria-live', 'assertive')\n  statusDiv.setAttribute('aria-relevant', 'additions text')\n  Object.assign(statusDiv.style, {\n    border: '0',\n    clip: 'rect(0 0 0 0)',\n    height: '1px',\n    margin: '-1px',\n    overflow: 'hidden',\n    padding: '0',\n    position: 'absolute',\n    width: '1px',\n  })\n  document.body.appendChild(statusDiv)\n  return statusDiv\n}\n\nexport default setStatus\n","let idCounter = 0\n\n/**\n * Accepts a parameter and returns it if it's a function\n * or a noop function if it's not. This allows us to\n * accept a callback, but not worry about it if it's not\n * passed.\n * @param {Function} cb the callback\n * @return {Function} a function\n */\nfunction cbToCb(cb) {\n  return typeof cb === 'function' ? cb : noop\n}\nfunction noop() {}\n\nfunction findParent(finder, node, rootNode) {\n  if (node !== null && node !== rootNode.parentNode) {\n    if (finder(node)) {\n      if (node === document.body && node.scrollTop === 0) {\n        // in chrome body.scrollTop always return 0\n        return document.documentElement\n      }\n      return node\n    } else {\n      return findParent(finder, node.parentNode, rootNode)\n    }\n  } else {\n    return null\n  }\n}\n\n/**\n * Get the closest element that scrolls\n * @param {HTMLElement} node - the child element to start searching for scroll parent at\n * @param {HTMLElement} rootNode - the root element of the component\n * @return {HTMLElement} the closest parentNode that scrolls\n */\nconst getClosestScrollParent = findParent.bind(\n  null,\n  node => node.scrollHeight > node.clientHeight,\n)\n\n/**\n * Scroll node into view if necessary\n * @param {HTMLElement} node - the element that should scroll into view\n * @param {HTMLElement} rootNode - the root element of the component\n * @param {Boolean} alignToTop - align element to the top of the visible area of the scrollable ancestor\n */\n// eslint-disable-next-line complexity\nfunction scrollIntoView(node, rootNode) {\n  const scrollParent = getClosestScrollParent(node, rootNode)\n  if (scrollParent === null) {\n    return\n  }\n  const scrollParentStyles = getComputedStyle(scrollParent)\n  const scrollParentRect = scrollParent.getBoundingClientRect()\n  const scrollParentBorderTopWidth = parseInt(\n    scrollParentStyles.borderTopWidth,\n    10,\n  )\n  const scrollParentBorderBottomWidth = parseInt(\n    scrollParentStyles.borderBottomWidth,\n    10,\n  )\n  const bordersWidth =\n    scrollParentBorderTopWidth + scrollParentBorderBottomWidth\n  const scrollParentTop = scrollParentRect.top + scrollParentBorderTopWidth\n  const nodeRect = node.getBoundingClientRect()\n\n  if (nodeRect.top < 0 && scrollParentRect.top < 0) {\n    scrollParent.scrollTop += nodeRect.top\n    return\n  }\n\n  if (nodeRect.top < 0) {\n    // the item is above the viewport and the parent is not above the viewport\n    scrollParent.scrollTop += nodeRect.top - scrollParentTop\n    return\n  }\n\n  if (nodeRect.top > 0 && scrollParentRect.top < 0) {\n    if (\n      scrollParentRect.bottom > 0 &&\n      nodeRect.bottom + bordersWidth > scrollParentRect.bottom\n    ) {\n      // the item is below scrollable area\n      scrollParent.scrollTop +=\n        nodeRect.bottom - scrollParentRect.bottom + bordersWidth\n    }\n    // item and parent top are on different sides of view top border (do nothing)\n    return\n  }\n\n  const nodeOffsetTop = nodeRect.top + scrollParent.scrollTop\n  const nodeTop = nodeOffsetTop - scrollParentTop\n  if (nodeTop < scrollParent.scrollTop) {\n    // the item is above the scrollable area\n    scrollParent.scrollTop = nodeTop\n  } else if (\n    nodeTop + nodeRect.height + bordersWidth >\n    scrollParent.scrollTop + scrollParentRect.height\n  ) {\n    // the item is below the scrollable area\n    scrollParent.scrollTop =\n      nodeTop + nodeRect.height - scrollParentRect.height + bordersWidth\n  }\n  // the item is within the scrollable area (do nothing)\n}\n\n/**\n * Simple debounce implementation. Will call the given\n * function once after the time given has passed since\n * it was last called.\n * @param {Function} fn the function to call after the time\n * @param {Number} time the time to wait\n * @return {Function} the debounced function\n */\nfunction debounce(fn, time) {\n  let timeoutId\n  return wrapper\n  function wrapper(...args) {\n    if (timeoutId) {\n      clearTimeout(timeoutId)\n    }\n    timeoutId = setTimeout(() => {\n      timeoutId = null\n      fn(...args)\n    }, time)\n  }\n}\n\n/**\n * This is intended to be used to compose event handlers.\n * They are executed in order until one of them sets\n * `event.preventDownshiftDefault = true`.\n * @param {Function} fns the event handler functions\n * @return {Function} the event handler to add to an element\n */\nfunction composeEventHandlers(...fns) {\n  return (event, ...args) =>\n    fns.some(fn => {\n      fn && fn(event, ...args)\n      // TODO: remove everything after the || in the next breaking change\n      return event.preventDownshiftDefault || event.defaultPrevented\n    })\n}\n\n/**\n * This generates a unique ID for an instance of Downshift\n * @return {String} the unique ID\n */\nfunction generateId() {\n  return String(idCounter++)\n}\n\n/**\n * This is only used in tests\n * @param {Number} num The number to set the idCounter to\n */\nfunction setIdCounter(num) {\n  idCounter = num\n}\n\n/**\n * Resets idCounter to 0. Used for SSR.\n */\nfunction resetIdCounter() {\n  idCounter = 0\n}\n\n/**\n * Returns the first argument that is not undefined\n * @param {...*} args the arguments\n * @return {*} the defined value\n */\nfunction firstDefined(...args) {\n  return args.find(a => typeof a !== 'undefined')\n}\n\n// eslint-disable-next-line complexity\nfunction getA11yStatusMessage({\n  isOpen,\n  highlightedItem,\n  selectedItem,\n  resultCount,\n  previousResultCount,\n  itemToString,\n}) {\n  if (!isOpen) {\n    if (selectedItem) {\n      return itemToString(selectedItem)\n    } else {\n      return ''\n    }\n  }\n  const resultCountChanged = resultCount !== previousResultCount\n  if (!resultCount) {\n    return 'No results.'\n  } else if (!highlightedItem || resultCountChanged) {\n    return `${resultCount} ${\n      resultCount === 1 ? 'result is' : 'results are'\n    } available, use up and down arrow keys to navigate.`\n  }\n  return itemToString(highlightedItem)\n}\n\n/**\n * Takes an argument and if it's an array, returns the first item in the array\n * otherwise returns the argument\n * @param {*} arg the maybe-array\n * @param {*} defaultValue the value if arg is falsey not defined\n * @return {*} the arg or it's first item\n */\nfunction unwrapArray(arg, defaultValue) {\n  arg = Array.isArray(arg) ? /* istanbul ignore next (preact) */ arg[0] : arg\n  if (!arg && defaultValue) {\n    return defaultValue\n  } else {\n    return arg\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Boolean} whether it's a DOM element\n */\nfunction isDOMElement(element) {\n  /* istanbul ignore if */\n  if (element.nodeName) {\n    // then this is preact\n    return typeof element.nodeName === 'string'\n  } else {\n    // then we assume this is react\n    return typeof element.type === 'string'\n  }\n}\n\n/**\n * @param {Object} element (P)react element\n * @return {Object} the props\n */\nfunction getElementProps(element) {\n  // props for react, attributes for preact\n  return element.props || /* istanbul ignore next (preact) */ element.attributes\n}\n\n/**\n * Throws a helpful error message for required properties. Useful\n * to be used as a default in destructuring or object params.\n * @param {String} fnName the function name\n * @param {String} propName the prop name\n */\nfunction requiredProp(fnName, propName) {\n  throw new Error(`The property \"${propName}\" is required in \"${fnName}\"`)\n}\n\nconst stateKeys = [\n  'highlightedIndex',\n  'inputValue',\n  'isOpen',\n  'selectedItem',\n  'type',\n]\n/**\n * @param {Object} state The state object\n * @return {Object} State that is relevant to downshift\n */\nfunction pickState(state = {}) {\n  const result = {}\n  stateKeys.forEach(k => {\n    if (state.hasOwnProperty(k)) {\n      result[k] = state[k]\n    }\n  })\n  return result\n}\n\nexport {\n  cbToCb,\n  composeEventHandlers,\n  debounce,\n  scrollIntoView,\n  findParent,\n  generateId,\n  firstDefined,\n  getA11yStatusMessage,\n  unwrapArray,\n  isDOMElement,\n  getElementProps,\n  noop,\n  requiredProp,\n  setIdCounter,\n  resetIdCounter,\n  pickState,\n  isPlainObject,\n}\n\n/**\n * Simple check if the value passed is object literal\n * @param {*} obj any things\n * @return {Boolean} whether it's object literal\n */\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.call(obj) === '[object Object]'\n}\n","/* eslint camelcase:0 */\n\nimport React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport preval from 'preval.macro'\nimport setA11yStatus from './set-a11y-status'\nimport {\n  cbToCb,\n  composeEventHandlers,\n  debounce,\n  scrollIntoView,\n  generateId,\n  firstDefined,\n  getA11yStatusMessage,\n  unwrapArray,\n  isDOMElement,\n  getElementProps,\n  noop,\n  requiredProp,\n  pickState,\n  isPlainObject,\n} from './utils'\n\nclass Downshift extends Component {\n  static propTypes = {\n    children: PropTypes.func,\n    render: PropTypes.func,\n    defaultHighlightedIndex: PropTypes.number,\n    defaultSelectedItem: PropTypes.any,\n    defaultInputValue: PropTypes.string,\n    defaultIsOpen: PropTypes.bool,\n    getA11yStatusMessage: PropTypes.func,\n    itemToString: PropTypes.func,\n    onChange: PropTypes.func,\n    onSelect: PropTypes.func,\n    onStateChange: PropTypes.func,\n    onInputValueChange: PropTypes.func,\n    onUserAction: PropTypes.func,\n    onOuterClick: PropTypes.func,\n    selectedItemChanged: PropTypes.func,\n    stateReducer: PropTypes.func,\n    itemCount: PropTypes.number,\n    id: PropTypes.string,\n    environment: PropTypes.shape({\n      addEventListener: PropTypes.func,\n      removeEventListener: PropTypes.func,\n      document: PropTypes.shape({\n        getElementById: PropTypes.func,\n        activeElement: PropTypes.any,\n        body: PropTypes.any,\n      }),\n    }),\n    // things we keep in state for uncontrolled components\n    // but can accept as props for controlled components\n    /* eslint-disable react/no-unused-prop-types */\n    selectedItem: PropTypes.any,\n    isOpen: PropTypes.bool,\n    inputValue: PropTypes.string,\n    highlightedIndex: PropTypes.number,\n    breakingChanges: PropTypes.shape({\n      resetInputOnSelection: PropTypes.bool,\n    }),\n    /* eslint-enable */\n  }\n\n  static defaultProps = {\n    defaultHighlightedIndex: null,\n    defaultSelectedItem: null,\n    defaultInputValue: '',\n    defaultIsOpen: false,\n    getA11yStatusMessage,\n    itemToString: i => {\n      if (i == null) {\n        return ''\n      }\n      if (process.env.NODE_ENV !== 'production' && isPlainObject(i)) {\n        //eslint-disable-next-line no-console\n        console.warn(\n          'downshift: An object was passed to the default implementation of `itemToString`. You should probably provide your own `itemToString` implementation. Please refer to the `itemToString` API documentation.',\n          'The object that was passed:',\n          i,\n        )\n      }\n      return String(i)\n    },\n    onStateChange: () => {},\n    onInputValueChange: () => {},\n    onUserAction: () => {},\n    onChange: () => {},\n    onSelect: () => {},\n    onOuterClick: () => {},\n    selectedItemChanged: (prevItem, item) => prevItem !== item,\n    environment:\n      typeof window === 'undefined' /* istanbul ignore next (ssr) */\n        ? {}\n        : window,\n    stateReducer: (state, stateToSet) => stateToSet,\n    breakingChanges: {},\n  }\n\n  static stateChangeTypes = {\n    unknown: '__autocomplete_unknown__',\n    mouseUp: '__autocomplete_mouseup__',\n    itemMouseEnter: '__autocomplete_item_mouseenter__',\n    keyDownArrowUp: '__autocomplete_keydown_arrow_up__',\n    keyDownArrowDown: '__autocomplete_keydown_arrow_down__',\n    keyDownEscape: '__autocomplete_keydown_escape__',\n    keyDownEnter: '__autocomplete_keydown_enter__',\n    clickItem: '__autocomplete_click_item__',\n    blurInput: '__autocomplete_blur_input__',\n    changeInput: '__autocomplete_change_input__',\n    keyDownSpaceButton: '__autocomplete_keydown_space_button__',\n    clickButton: '__autocomplete_click_button__',\n    blurButton: '__autocomplete_blur_button__',\n    controlledPropUpdatedSelectedItem:\n      '__autocomplete_controlled_prop_updated_selected_item__',\n  }\n\n  constructor(...args) {\n    super(...args)\n    const state = this.getState({\n      highlightedIndex: this.props.defaultHighlightedIndex,\n      isOpen: this.props.defaultIsOpen,\n      inputValue: this.props.defaultInputValue,\n      selectedItem: this.props.defaultSelectedItem,\n    })\n    if (state.selectedItem) {\n      state.inputValue = this.props.itemToString(state.selectedItem)\n    }\n    this.state = state\n    this.id = this.props.id || `downshift-${generateId()}`\n  }\n\n  input = null\n  items = []\n  // itemCount can be changed asynchronously\n  // from within downshift (so it can't come from a prop)\n  // this is why we store it as an instance and use\n  // getItemCount rather than just use items.length\n  // (to support windowing + async)\n  itemCount = null\n  previousResultCount = 0\n\n  /**\n   * Gets the state based on internal state or props\n   * If a state value is passed via props, then that\n   * is the value given, otherwise it's retrieved from\n   * stateToMerge\n   *\n   * This will perform a shallow merge of the given state object\n   * with the state coming from props\n   * (for the controlled component scenario)\n   * This is used in state updater functions so they're referencing\n   * the right state regardless of where it comes from.\n   *\n   * @param {Object} stateToMerge defaults to this.state\n   * @return {Object} the state\n   */\n  getState(stateToMerge = this.state) {\n    return Object.keys(stateToMerge).reduce((state, key) => {\n      state[key] = this.isControlledProp(key)\n        ? this.props[key]\n        : stateToMerge[key]\n      return state\n    }, {})\n  }\n\n  /**\n   * This determines whether a prop is a \"controlled prop\" meaning it is\n   * state which is controlled by the outside of this component rather\n   * than within this component.\n   * @param {String} key the key to check\n   * @return {Boolean} whether it is a controlled controlled prop\n   */\n  isControlledProp(key) {\n    return this.props[key] !== undefined\n  }\n\n  getItemCount() {\n    // things read better this way. They're in priority order:\n    // 1. `this.itemCount`\n    // 2. `this.props.itemCount`\n    // 3. `this.items.length`\n    /* eslint-disable no-negated-condition */\n    if (this.itemCount != null) {\n      return this.itemCount\n    } else if (this.props.itemCount !== undefined) {\n      return this.props.itemCount\n    } else {\n      return this.items.length\n    }\n    /* eslint-enable no-negated-condition */\n  }\n\n  setItemCount = count => (this.itemCount = count)\n  unsetItemCount = () => (this.itemCount = null)\n\n  getItemNodeFromIndex = index => {\n    return this.props.environment.document.getElementById(this.getItemId(index))\n  }\n\n  setHighlightedIndex = (\n    highlightedIndex = this.props.defaultHighlightedIndex,\n    otherStateToSet = {},\n  ) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState({highlightedIndex, ...otherStateToSet})\n  }\n\n  scrollHighlightedItemIntoView = () => {\n    /* istanbul ignore else (react-native) */\n    if (preval`module.exports = process.env.BUILD_REACT_NATIVE !== 'true'`) {\n      const node = this.getItemNodeFromIndex(this.getState().highlightedIndex)\n      const rootNode = this._rootNode\n      scrollIntoView(node, rootNode)\n    }\n  }\n\n  openAndHighlightDefaultIndex = (otherStateToSet = {}) => {\n    this.setHighlightedIndex(undefined, {isOpen: true, ...otherStateToSet})\n  }\n\n  highlightDefaultIndex = (otherStateToSet = {}) => {\n    this.setHighlightedIndex(undefined, otherStateToSet)\n  }\n\n  moveHighlightedIndex = (amount, otherStateToSet) => {\n    if (this.getState().isOpen) {\n      this.changeHighlightedIndex(amount, otherStateToSet)\n    } else {\n      this.openAndHighlightDefaultIndex(otherStateToSet)\n    }\n  }\n\n  // eslint-disable-next-line complexity\n  changeHighlightedIndex = (moveAmount, otherStateToSet) => {\n    const itemsLastIndex = this.getItemCount() - 1\n    if (itemsLastIndex < 0) {\n      return\n    }\n    const {highlightedIndex} = this.getState()\n    let baseIndex = highlightedIndex\n    if (baseIndex === null) {\n      baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1\n    }\n    let newIndex = baseIndex + moveAmount\n    if (newIndex < 0) {\n      newIndex = itemsLastIndex\n    } else if (newIndex > itemsLastIndex) {\n      newIndex = 0\n    }\n    this.setHighlightedIndex(newIndex, otherStateToSet)\n  }\n\n  clearSelection = cb => {\n    this.internalSetState(\n      {\n        selectedItem: null,\n        inputValue: '',\n        isOpen: false,\n      },\n      cb,\n    )\n  }\n\n  selectItem = (item, otherStateToSet, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      {\n        isOpen: false,\n        highlightedIndex: this.props.defaultHighlightedIndex,\n        selectedItem: item,\n        inputValue:\n          this.isControlledProp('selectedItem') &&\n          this.props.breakingChanges.resetInputOnSelection\n            ? this.props.defaultInputValue\n            : this.props.itemToString(item),\n        ...otherStateToSet,\n      },\n      cb,\n    )\n  }\n\n  selectItemAtIndex = (itemIndex, otherStateToSet, cb) => {\n    const item = this.items[itemIndex]\n    if (item == null) {\n      return\n    }\n    this.selectItem(item, otherStateToSet, cb)\n  }\n\n  selectHighlightedItem = (otherStateToSet, cb) => {\n    return this.selectItemAtIndex(\n      this.getState().highlightedIndex,\n      otherStateToSet,\n      cb,\n    )\n  }\n\n  // any piece of our state can live in two places:\n  // 1. Uncontrolled: it's internal (this.state)\n  //    We will call this.setState to update that state\n  // 2. Controlled: it's external (this.props)\n  //    We will call this.props.onStateChange to update that state\n  //\n  // In addition, we'll call this.props.onChange if the\n  // selectedItem is changed.\n  internalSetState(stateToSet, cb) {\n    let isItemSelected, onChangeArg\n\n    const onStateChangeArg = {}\n    const isStateToSetFunction = typeof stateToSet === 'function'\n\n    // we want to call `onInputValueChange` before the `setState` call\n    // so someone controlling the `inputValue` state gets notified of\n    // the input change as soon as possible. This avoids issues with\n    // preserving the cursor position.\n    // See https://github.com/paypal/downshift/issues/217 for more info.\n    if (!isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n      this.props.onInputValueChange(stateToSet.inputValue, {\n        ...this.getStateAndHelpers(),\n        ...stateToSet,\n      })\n    }\n    return this.setState(\n      state => {\n        state = this.getState(state)\n        stateToSet = isStateToSetFunction ? stateToSet(state) : stateToSet\n\n        // Your own function that could modify the state that will be set.\n        stateToSet = this.props.stateReducer(state, stateToSet)\n\n        // checks if an item is selected, regardless of if it's different from\n        // what was selected before\n        // used to determine if onSelect and onChange callbacks should be called\n        isItemSelected = stateToSet.hasOwnProperty('selectedItem')\n        // this keeps track of the object we want to call with setState\n        const nextState = {}\n        // this is just used to tell whether the state changed\n        const nextFullState = {}\n        // we need to call on change if the outside world is controlling any of our state\n        // and we're trying to update that state. OR if the selection has changed and we're\n        // trying to update the selection\n        if (isItemSelected && stateToSet.selectedItem !== state.selectedItem) {\n          onChangeArg = stateToSet.selectedItem\n        }\n        stateToSet.type = stateToSet.type || Downshift.stateChangeTypes.unknown\n\n        Object.keys(stateToSet).forEach(key => {\n          // onStateChangeArg should only have the state that is\n          // actually changing\n          if (state[key] !== stateToSet[key]) {\n            onStateChangeArg[key] = stateToSet[key]\n          }\n          // the type is useful for the onStateChangeArg\n          // but we don't actually want to set it in internal state.\n          // this is an undocumented feature for now... Not all internalSetState\n          // calls support it and I'm not certain we want them to yet.\n          // But it enables users controlling the isOpen state to know when\n          // the isOpen state changes due to mouseup events which is quite handy.\n          if (key === 'type') {\n            return\n          }\n          nextFullState[key] = stateToSet[key]\n          // if it's coming from props, then we don't care to set it internally\n          if (!this.isControlledProp(key)) {\n            nextState[key] = stateToSet[key]\n          }\n        })\n\n        // if stateToSet is a function, then we weren't able to call onInputValueChange\n        // earlier, so we'll call it now that we know what the inputValue state will be.\n        if (isStateToSetFunction && stateToSet.hasOwnProperty('inputValue')) {\n          this.props.onInputValueChange(stateToSet.inputValue, {\n            ...this.getStateAndHelpers(),\n            ...stateToSet,\n          })\n        }\n\n        return nextState\n      },\n      () => {\n        // call the provided callback if it's a callback\n        cbToCb(cb)()\n\n        // only call the onStateChange and onChange callbacks if\n        // we have relevant information to pass them.\n        const hasMoreStateThanType = Object.keys(onStateChangeArg).length > 1\n        if (hasMoreStateThanType) {\n          this.props.onStateChange(onStateChangeArg, this.getStateAndHelpers())\n        }\n\n        if (isItemSelected) {\n          this.props.onSelect(\n            stateToSet.selectedItem,\n            this.getStateAndHelpers(),\n          )\n        }\n\n        if (onChangeArg !== undefined) {\n          this.props.onChange(onChangeArg, this.getStateAndHelpers())\n        }\n        // this is currently undocumented and therefore subject to change\n        // We'll try to not break it, but just be warned.\n        this.props.onUserAction(onStateChangeArg, this.getStateAndHelpers())\n      },\n    )\n  }\n\n  getStateAndHelpers() {\n    const {highlightedIndex, inputValue, selectedItem, isOpen} = this.getState()\n    const {itemToString} = this.props\n    const {id} = this\n    const {\n      getRootProps,\n      getButtonProps,\n      getLabelProps,\n      getInputProps,\n      getItemProps,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      clearItems,\n      reset,\n      setItemCount,\n      unsetItemCount,\n    } = this\n    return {\n      // prop getters\n      getRootProps,\n      getButtonProps,\n      getLabelProps,\n      getInputProps,\n      getItemProps,\n\n      // actions\n      reset,\n      openMenu,\n      closeMenu,\n      toggleMenu,\n      selectItem,\n      selectItemAtIndex,\n      selectHighlightedItem,\n      setHighlightedIndex,\n      clearSelection,\n      clearItems,\n      setItemCount,\n      unsetItemCount,\n\n      //props\n      itemToString,\n\n      //derived\n      id,\n\n      // state\n      highlightedIndex,\n      inputValue,\n      isOpen,\n      selectedItem,\n    }\n  }\n\n  //////////////////////////// ROOT\n\n  rootRef = node => (this._rootNode = node)\n\n  getRootProps = (\n    {refKey = 'ref', ...rest} = {},\n    {suppressRefError = false} = {},\n  ) => {\n    // this is used in the render to know whether the user has called getRootProps.\n    // It uses that to know whether to apply the props automatically\n    this.getRootProps.called = true\n    this.getRootProps.refKey = refKey\n    this.getRootProps.suppressRefError = suppressRefError\n    return {\n      [refKey]: this.rootRef,\n      ...rest,\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ROOT\n\n  keyDownHandlers = {\n    ArrowDown(event) {\n      event.preventDefault()\n      const amount = event.shiftKey ? 5 : 1\n      this.moveHighlightedIndex(amount, {\n        type: Downshift.stateChangeTypes.keyDownArrowDown,\n      })\n    },\n\n    ArrowUp(event) {\n      event.preventDefault()\n      const amount = event.shiftKey ? -5 : -1\n      this.moveHighlightedIndex(amount, {\n        type: Downshift.stateChangeTypes.keyDownArrowUp,\n      })\n    },\n\n    Enter(event) {\n      if (this.getState().isOpen) {\n        event.preventDefault()\n        this.selectHighlightedItem({\n          type: Downshift.stateChangeTypes.keyDownEnter,\n        })\n      }\n    },\n\n    Escape(event) {\n      event.preventDefault()\n      this.reset({type: Downshift.stateChangeTypes.keyDownEscape})\n    },\n  }\n\n  //////////////////////////// BUTTON\n\n  buttonKeyDownHandlers = {\n    ...this.keyDownHandlers,\n\n    ' '(event) {\n      event.preventDefault()\n      this.toggleMenu({type: Downshift.stateChangeTypes.keyDownSpaceButton})\n    },\n  }\n\n  getButtonProps = ({onClick, onKeyDown, onBlur, ...rest} = {}) => {\n    const {isOpen} = this.getState()\n    const enabledEventHandlers = preval`module.exports = process.env.BUILD_REACT_NATIVE === 'true'`\n      ? /* istanbul ignore next (react-native) */\n        {\n          onPress: composeEventHandlers(onClick, this.button_handleClick),\n        }\n      : {\n          onClick: composeEventHandlers(onClick, this.button_handleClick),\n          onKeyDown: composeEventHandlers(onKeyDown, this.button_handleKeyDown),\n          onBlur: composeEventHandlers(onBlur, this.button_handleBlur),\n        }\n    const eventHandlers = rest.disabled ? {} : enabledEventHandlers\n    return {\n      type: 'button',\n      role: 'button',\n      'aria-label': isOpen ? 'close menu' : 'open menu',\n      'aria-expanded': isOpen,\n      'aria-haspopup': true,\n      ...eventHandlers,\n      ...rest,\n    }\n  }\n\n  button_handleKeyDown = event => {\n    if (this.buttonKeyDownHandlers[event.key]) {\n      this.buttonKeyDownHandlers[event.key].call(this, event)\n    }\n  }\n\n  button_handleClick = event => {\n    event.preventDefault()\n    // handle odd case for Safari and Firefox which\n    // don't give the button the focus properly.\n    /* istanbul ignore if (can't reasonably test this) */\n    if (\n      this.props.environment.document.activeElement ===\n      this.props.environment.document.body\n    ) {\n      event.target.focus()\n    }\n    this.toggleMenu({type: Downshift.stateChangeTypes.clickButton})\n  }\n\n  button_handleBlur = () => {\n    if (!this.isMouseDown) {\n      this.reset({type: Downshift.stateChangeTypes.blurButton})\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ BUTTON\n\n  /////////////////////////////// LABEL\n\n  getLabelProps = (props = {}) => {\n    this.getLabelProps.called = true\n    if (\n      this.getInputProps.called &&\n      props.htmlFor &&\n      props.htmlFor !== this.inputId\n    ) {\n      throw new Error(\n        `downshift: You provided the htmlFor of \"${\n          props.htmlFor\n        }\" for your label, but the id of your input is \"${\n          this.inputId\n        }\". You must either remove the id from your input or set the htmlFor of the label equal to the input id.`,\n      )\n    }\n    this.inputId = firstDefined(this.inputId, props.htmlFor, `${this.id}-input`)\n    return {\n      ...props,\n      htmlFor: this.inputId,\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ LABEL\n\n  /////////////////////////////// INPUT\n\n  getInputProps = ({onKeyDown, onBlur, onChange, onInput, ...rest} = {}) => {\n    this.getInputProps.called = true\n    if (this.getLabelProps.called && rest.id && rest.id !== this.inputId) {\n      throw new Error(\n        `downshift: You provided the id of \"${\n          rest.id\n        }\" for your input, but the htmlFor of your label is \"${\n          this.inputId\n        }\". You must either remove the id from your input or set the htmlFor of the label equal to the input id.`,\n      )\n    }\n    this.inputId = firstDefined(this.inputId, rest.id, `${this.id}-input`)\n    let onChangeKey\n    /* istanbul ignore next (preact) */\n    if (preval`module.exports = process.env.BUILD_PREACT === 'true'`) {\n      onChangeKey = 'onInput'\n      /* istanbul ignore next (react-native) */\n    } else if (\n      preval`module.exports = process.env.BUILD_REACT_NATIVE === 'true'`\n    ) {\n      onChangeKey = 'onChangeText'\n    } else {\n      onChangeKey = 'onChange'\n    }\n    const {inputValue, isOpen, highlightedIndex} = this.getState()\n    const eventHandlers = rest.disabled\n      ? {}\n      : {\n          [onChangeKey]: composeEventHandlers(\n            onChange,\n            onInput,\n            this.input_handleChange,\n          ),\n          onKeyDown: composeEventHandlers(onKeyDown, this.input_handleKeyDown),\n          onBlur: composeEventHandlers(onBlur, this.input_handleBlur),\n        }\n    return {\n      role: 'combobox',\n      'aria-autocomplete': 'list',\n      'aria-expanded': isOpen,\n      'aria-activedescendant':\n        isOpen && typeof highlightedIndex === 'number' && highlightedIndex >= 0\n          ? this.getItemId(highlightedIndex)\n          : null,\n      autoComplete: 'off',\n      value: inputValue,\n      ...eventHandlers,\n      ...rest,\n      id: this.inputId,\n    }\n  }\n\n  input_handleKeyDown = event => {\n    if (event.key && this.keyDownHandlers[event.key]) {\n      this.keyDownHandlers[event.key].call(this, event)\n    }\n  }\n\n  input_handleChange = event => {\n    this.internalSetState({\n      type: Downshift.stateChangeTypes.changeInput,\n      isOpen: true,\n      inputValue: preval`module.exports = process.env.BUILD_REACT_NATIVE === 'true'`\n        ? /* istanbul ignore next (react-native) */ event\n        : event.target.value,\n    })\n  }\n\n  input_handleBlur = () => {\n    if (!this.isMouseDown) {\n      this.reset({type: Downshift.stateChangeTypes.blurInput})\n    }\n  }\n\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ INPUT\n\n  /////////////////////////////// ITEM\n  getItemId(index) {\n    return `${this.id}-item-${index}`\n  }\n\n  getItemProps = ({\n    onMouseMove,\n    onMouseDown,\n    onClick,\n    index,\n    item = requiredProp('getItemProps', 'item'),\n    ...rest\n  } = {}) => {\n    if (index === undefined) {\n      this.items.push(item)\n      index = this.items.indexOf(item)\n    } else {\n      this.items[index] = item\n    }\n\n    const onSelectKey = preval`module.exports = process.env.BUILD_REACT_NATIVE === 'true'`\n      ? /* istanbul ignore next (react-native) */ 'onPress'\n      : 'onClick'\n    return {\n      id: this.getItemId(index),\n      // onMouseMove is used over onMouseEnter here. onMouseMove\n      // is only triggered on actual mouse movement while onMouseEnter\n      // can fire on DOM changes, interrupting keyboard navigation\n      onMouseMove: composeEventHandlers(onMouseMove, () => {\n        if (index === this.getState().highlightedIndex) {\n          return\n        }\n        this.setHighlightedIndex(index, {\n          type: Downshift.stateChangeTypes.itemMouseEnter,\n        })\n\n        // We never want to manually scroll when changing state based\n        // on `onMouseMove` because we will be moving the element out\n        // from under the user which is currently scrolling/moving the\n        // cursor\n        this.avoidScrolling = true\n        setTimeout(() => (this.avoidScrolling = false), 250)\n      }),\n      onMouseDown: composeEventHandlers(onMouseDown, event => {\n        // This prevents the activeElement from being changed\n        // to the item so it can remain with the current activeElement\n        // which is a more common use case.\n        event.preventDefault()\n      }),\n      [onSelectKey]: composeEventHandlers(onClick, () => {\n        this.selectItemAtIndex(index, {\n          type: Downshift.stateChangeTypes.clickItem,\n        })\n      }),\n      ...rest,\n    }\n  }\n  //\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\ ITEM\n\n  clearItems = () => {\n    this.items = []\n  }\n\n  reset = (otherStateToSet = {}, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      ({selectedItem}) => ({\n        isOpen: false,\n        highlightedIndex: this.props.defaultHighlightedIndex,\n        inputValue: this.props.itemToString(selectedItem),\n        ...otherStateToSet,\n      }),\n      cbToCb(cb),\n    )\n  }\n\n  toggleMenu = (otherStateToSet = {}, cb) => {\n    otherStateToSet = pickState(otherStateToSet)\n    this.internalSetState(\n      ({isOpen}) => {\n        return {isOpen: !isOpen, ...otherStateToSet}\n      },\n      () => {\n        const {isOpen} = this.getState()\n        if (isOpen) {\n          this.highlightDefaultIndex()\n        }\n        cbToCb(cb)()\n      },\n    )\n  }\n\n  openMenu = cb => {\n    this.internalSetState({isOpen: true}, cbToCb(cb))\n  }\n\n  closeMenu = cb => {\n    this.internalSetState({isOpen: false}, cbToCb(cb))\n  }\n\n  updateStatus = debounce(() => {\n    if (!this._isMounted) {\n      return\n    }\n    const state = this.getState()\n    const item = this.items[state.highlightedIndex]\n    const resultCount = this.getItemCount()\n    const status = this.props.getA11yStatusMessage({\n      itemToString: this.props.itemToString,\n      previousResultCount: this.previousResultCount,\n      resultCount,\n      highlightedItem: item,\n      ...state,\n    })\n    this.previousResultCount = resultCount\n    /* istanbul ignore else (react-native) */\n    if (preval`module.exports = process.env.BUILD_REACT_NATIVE !== 'true'`) {\n      setA11yStatus(status)\n    }\n  }, 200)\n\n  componentDidMount() {\n    // the _isMounted property is because we have `updateStatus` in a `debounce`\n    // and we don't want to update the status if the component has been umounted\n    this._isMounted = true\n    /* istanbul ignore if (react-native) */\n    if (preval`module.exports = process.env.BUILD_REACT_NATIVE === 'true'`) {\n      this.cleanup = () => {\n        this._isMounted = false\n      }\n    } else {\n      // this.isMouseDown helps us track whether the mouse is currently held down.\n      // This is useful when the user clicks on an item in the list, but holds the mouse\n      // down long enough for the list to disappear (because the blur event fires on the input)\n      // this.isMouseDown is used in the blur handler on the input to determine whether the blur event should\n      // trigger hiding the menu.\n      const onMouseDown = () => {\n        this.isMouseDown = true\n      }\n      const onMouseUp = event => {\n        const {document} = this.props.environment\n        this.isMouseDown = false\n        if (\n          (event.target === this._rootNode ||\n            !this._rootNode.contains(event.target)) &&\n          this.getState().isOpen &&\n          (!this.inputId || document.activeElement.id !== this.inputId)\n        ) {\n          this.reset({type: Downshift.stateChangeTypes.mouseUp}, () =>\n            this.props.onOuterClick(this.getStateAndHelpers()),\n          )\n        }\n      }\n      this.props.environment.addEventListener('mousedown', onMouseDown)\n      this.props.environment.addEventListener('mouseup', onMouseUp)\n\n      this.cleanup = () => {\n        this._isMounted = false\n        this.props.environment.removeEventListener('mousedown', onMouseDown)\n        this.props.environment.removeEventListener('mouseup', onMouseUp)\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.isControlledProp('selectedItem') &&\n      this.props.selectedItemChanged(\n        prevProps.selectedItem,\n        this.props.selectedItem,\n      )\n    ) {\n      this.internalSetState({\n        type: Downshift.stateChangeTypes.controlledPropUpdatedSelectedItem,\n        inputValue: this.props.itemToString(this.props.selectedItem),\n      })\n    }\n\n    const current =\n      this.props.highlightedIndex === undefined ? this.state : this.props\n    const prev =\n      prevProps.highlightedIndex === undefined ? prevState : prevProps\n\n    if (\n      current.highlightedIndex !== prev.highlightedIndex &&\n      !this.avoidScrolling\n    ) {\n      this.scrollHighlightedItemIntoView()\n    }\n\n    this.updateStatus()\n  }\n\n  componentWillUnmount() {\n    this.cleanup() // avoids memory leak\n  }\n\n  // eslint-disable-next-line complexity\n  render() {\n    const children = unwrapArray(this.props.render || this.props.children, noop)\n    // because the items are rerendered every time we call the children\n    // we clear this out each render and\n    this.clearItems()\n    // we reset this so we know whether the user calls getRootProps during\n    // this render. If they do then we don't need to do anything,\n    // if they don't then we need to clone the element they return and\n    // apply the props for them.\n    this.getRootProps.called = false\n    this.getRootProps.refKey = undefined\n    this.getRootProps.suppressRefError = undefined\n    // we do something similar for getLabelProps\n    this.getLabelProps.called = false\n    // and something similar for getInputProps\n    this.getInputProps.called = false\n    const element = unwrapArray(children(this.getStateAndHelpers()))\n    if (!element) {\n      return null\n    }\n    if (this.getRootProps.called) {\n      if (!this.getRootProps.suppressRefError) {\n        validateGetRootPropsCalledCorrectly(element, this.getRootProps)\n      }\n      return element\n    } else if (isDOMElement(element)) {\n      // they didn't apply the root props, but we can clone\n      // this and apply the props ourselves\n      return React.cloneElement(\n        element,\n        this.getRootProps(getElementProps(element)),\n      )\n    } else {\n      // they didn't apply the root props, but they need to\n      // otherwise we can't query around the autocomplete\n      throw new Error(\n        'downshift: If you return a non-DOM element, you must use apply the getRootProps function',\n      )\n    }\n  }\n}\n\nexport default Downshift\n\nfunction validateGetRootPropsCalledCorrectly(element, {refKey}) {\n  const refKeySpecified = refKey !== 'ref'\n  const isComposite = !isDOMElement(element)\n  if (isComposite && !refKeySpecified) {\n    throw new Error(\n      'downshift: You returned a non-DOM element. You must specify a refKey in getRootProps',\n    )\n  } else if (!isComposite && refKeySpecified) {\n    throw new Error(\n      `downshift: You returned a DOM element. You should not specify a refKey in getRootProps. You specified \"${refKey}\"`,\n    )\n  }\n  if (!getElementProps(element)[refKey]) {\n    throw new Error(\n      `downshift: You must apply the ref prop \"${refKey}\" from getRootProps onto your root element.`,\n    )\n  }\n}\n","import Downshift from './downshift'\nimport {resetIdCounter} from './utils'\n\n/*\n * Fix importing in typescript after rollup compilation\n * https://github.com/rollup/rollup/issues/1156\n * https://github.com/Microsoft/TypeScript/issues/13017#issuecomment-268657860\n */\nDownshift.default = Downshift\nDownshift.resetIdCounter = resetIdCounter\n\nexport default Downshift\n"],"names":["statusDiv","document","getElementById","statuses","setStatus","status","isSameAsLast","length","div","getStatusDiv","lastChild","removeChild","firstChild","filter","Boolean","forEach","statusItem","index","appendChild","getStatusChildDiv","display","childDiv","createElement","style","textContent","setAttribute","assign","body","idCounter","cbToCb","cb","noop","findParent","finder","node","rootNode","parentNode","scrollTop","documentElement","getClosestScrollParent","bind","scrollHeight","clientHeight","scrollIntoView","scrollParent","scrollParentStyles","getComputedStyle","scrollParentRect","getBoundingClientRect","scrollParentBorderTopWidth","parseInt","borderTopWidth","scrollParentBorderBottomWidth","borderBottomWidth","bordersWidth","scrollParentTop","top","nodeRect","bottom","nodeOffsetTop","nodeTop","height","debounce","fn","time","timeoutId","args","setTimeout","composeEventHandlers","fns","event","some","preventDownshiftDefault","defaultPrevented","generateId","String","resetIdCounter","firstDefined","find","a","getA11yStatusMessage","isOpen","highlightedItem","selectedItem","resultCount","previousResultCount","itemToString","unwrapArray","arg","defaultValue","Array","isArray","isDOMElement","element","nodeName","type","getElementProps","props","attributes","requiredProp","fnName","propName","Error","stateKeys","pickState","state","result","hasOwnProperty","k","isPlainObject","obj","Object","prototype","toString","call","Downshift","getState","defaultHighlightedIndex","defaultIsOpen","defaultInputValue","defaultSelectedItem","inputValue","id","stateToMerge","keys","reduce","key","isControlledProp","undefined","getItemCount","itemCount","items","internalSetState","stateToSet","isItemSelected","onChangeArg","onStateChangeArg","isStateToSetFunction","onInputValueChange","getStateAndHelpers","setState","stateReducer","nextState","nextFullState","stateChangeTypes","unknown","hasMoreStateThanType","onStateChange","onSelect","onChange","onUserAction","highlightedIndex","getRootProps","getButtonProps","getLabelProps","getInputProps","getItemProps","openMenu","closeMenu","toggleMenu","selectItem","selectItemAtIndex","selectHighlightedItem","setHighlightedIndex","clearSelection","clearItems","reset","setItemCount","unsetItemCount","getItemId","componentDidMount","_isMounted","onMouseDown","isMouseDown","onMouseUp","environment","target","_rootNode","contains","inputId","activeElement","mouseUp","onOuterClick","addEventListener","cleanup","removeEventListener","componentDidUpdate","prevProps","prevState","selectedItemChanged","controlledPropUpdatedSelectedItem","current","prev","avoidScrolling","scrollHighlightedItemIntoView","updateStatus","componentWillUnmount","render","children","called","refKey","suppressRefError","React","cloneElement","Component","defaultProps","i","warn","prevItem","item","window","input","count","getItemNodeFromIndex","otherStateToSet","openAndHighlightDefaultIndex","highlightDefaultIndex","moveHighlightedIndex","amount","changeHighlightedIndex","moveAmount","itemsLastIndex","baseIndex","newIndex","breakingChanges","resetInputOnSelection","itemIndex","rootRef","rest","keyDownHandlers","preventDefault","shiftKey","keyDownArrowDown","keyDownArrowUp","keyDownEnter","keyDownEscape","buttonKeyDownHandlers","keyDownSpaceButton","onClick","onKeyDown","onBlur","enabledEventHandlers","button_handleClick","button_handleKeyDown","button_handleBlur","eventHandlers","disabled","focus","clickButton","blurButton","htmlFor","onInput","onChangeKey","input_handleChange","input_handleKeyDown","input_handleBlur","changeInput","value","blurInput","onMouseMove","push","indexOf","onSelectKey","itemMouseEnter","clickItem","validateGetRootPropsCalledCorrectly","refKeySpecified","isComposite","default"],"mappings":"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"}